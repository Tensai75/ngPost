
                  __________               __
      ____    ____\______   \____  _______/  |_
     /    \  / ___\|     ___/  _ \/  ___/\   __\
    |   |  \/ /_/  >    |  (  <_> )___ \  |  |
    |___|  /\___  /|____|   \____/____  > |__|
         \//_____/                    \/


TODO: bandwidth optimization:
	test with no threads and no article preparation
	check if we can play on the SSL protocol paramaters

TODO: proper multi-threading support with several Article Producer (one per Thread)
	otherwise issue and potential Producer event loop overflow on big stations (> 20 cores and 10Gbps connection)
	Soluce: create ArticleProducer object and make PosterThread that would own ArticleProducer in a Thread and several NntpConnection in another

TODO: --nfo option (cf github issue #10 and NewsUp dev)


####################################################
###       Release: ngPost v4.1                   ###
###       date:    2020/01/??                    ###
####################################################

- add Folder Monitoring (--monitor) and auto delete features (--del)

- add RAR_MAX config and "limit rar option" in th GUI

- Use Auto Post parameters when creating the Quick Posts (par2 redundancy, rar size...)

- fix GUI wrong state and crash if Posting failed due to no SSL support or no connection

- fix compilation for Qt < 5.9 (QWidget::setWindowFlag)

- add macro __FORMAT_ARTICLE_BODY_IN_PRODUCER__ for future multi-threaded tests with awsms

- update file separator of the post history file to be a semicolon rather than a coma.

- add latest files first option for GUI Auto Posting scan.



####################################################
###       Release: ngPost v3.2                   ###
###       date:    2020/01/23                    ###
####################################################

- Fix bug of wrong password in nzb file when using Auto Posting generation...

- display post size in GB as nowadays people post HD or 4K videos...



####################################################
###       Release: ngPost v3.1                   ###
###       date:    2020/01/22                    ###
####################################################

- implement PostingJob to get the posting out of NgPost and thus be able to handle several
- PostingJob queue implemented for both HMI and CMD
- QProcess are now handled asynchronously => no HMI freeze and possible to kill the external processes (rar or par2)

- fix Issue #9: use only one Mutex and make sure we wait the expected Articles are prepared before the Connections start posting

- introduce new config POST_HISTORY where all successful post will add a line with the date, nzb name, rar name and password (cvs format)

- add --auto to the command line
- AutoPostWidget to automate Quick Post creation and start them



####################################################
###       Release: ngPost v2.3                   ###
###       date:    2020/01/19                    ###
####################################################

Prepare the HMI to be able to create several Posting Jobs
The implementation will be done if I get some donations for it.



####################################################
###       Release: ngPost v2.2                   ###
###       date:    2020/01/17                    ###
####################################################

- release for Raspberry PI (Raspbian armhf)

- support 7-zip compression

- fix / hack to use parpar (as external command)

- add keyword RAR_EXTRA in config file

- ask to overwrite existing nzb file
- refactor NgPost::compressFiles



####################################################
###       Release: ngPost v2.1                   ###
###       date:    2020/01/15                    ###
####################################################

- make the architecture thread safe to prevent duplicate articles and potential segfault
- fix completion check of the posting of all Articles of a NntpFile (and log duplicate Article even if there shouldn't be any)
- fix wong published date of the posted files in the nzb
- fix empty groups in nzb file
- use random poster (From) for each article when doing Article's obfuscation

- implement the possibility to compress and generate par2 from the selected files before posting
- rar has been chosen for the compression to allow the automatic decompression with all major readers
- allow rar and par2 name obfuscation
- incorporate par2 to the release
- allow the possibility to choose the par2 cmd and its args (for exemple to use Multipar on Windows)

- add select folder button
- special ListWidget for the list of files with ngPost signature and icons
- add the Save configuration feature
- add Donation button linked to Paypal
- add About button



####################################################
###       Release: ngPost v1.7                   ###
###       date:    2020/01/03                    ###
####################################################

- no more slot NgPost::onArticlePosted, instead use inline function (no more segfault)

- introduce debug in cmd (-d or --debug)

- update --disp_progress files to log when finish posting (start is logged in debug mode too)



####################################################
###       Release: ngPost v1.6                   ###
###       date:    2019/12/31                    ###
####################################################

- fix segfault within NgPost::onArticlePosted

- introduce option --disp_progress (NONE, BAR, FILES) to avoid displaying progress bar on command line

- generate the poster for the whole post instead of for each Article (so we can find the post in indexers)

- remove file obfuscation (that wasn't implemented) and only let the article one (CAREFUL with it!!!)



####################################################
###       Release: ngPost v1.5                   ###
###       date:    2019/12/22                    ###
####################################################

- add -f/-from command line option that was missing

- fix -z/-msg_id option



####################################################
###       Release: ngPost v1.4                   ###
###       date:    2019/12/20                    ###
####################################################

- check for updates (parse last version available on GitHUB)

- add debug informations (in case of error posting Articles, telling when we retry posting)

- blank the nzb name when we remove all files in the HMI to do a new post



####################################################
###       Release: ngPost v1.3                   ###
###       date:    2019/12/05                    ###
####################################################

- add robustness on posting articles by retrying a number of times if Failure

- new option -r or -retry for that purpose (default value 5)

- allow to stop an ongoing post from the HMI

- add some tooltips for the options (HMI)

- fix potential crash (double deletion of NgPost::_file)



####################################################
###       Release: ngPost v1.2                   ###
###       date:    2019/11/16                    ###
####################################################

- switch Linux release to Qt 12.6 LTS (only 64bit available)

- add Windows 32 bit release (Qt 12.5 LTS)

- fix potential crash (always emit a signal for logging as the writting must be done in the HMI thread)

- msg-id format update (more compact without curly brackets)

- default port to 563 if SSL option is checked (especially for command line with server details)

- HMI: fix automatic nzb filename when adding the first file
- HMI: add a button to generate a random nzb password (you should then use it for your encryption password!)
- HMI: add a button to generate a random poster email for the whole post

- update postFiles.sh to manage several files and relative paths



####################################################
###       Release: ngPost v1.1                   ###
###       date:    2019/09/17                    ###
####################################################

- Adding minimalist HMI
=> code modification to be able to handle multiple posts one after each other (instead of closing the app)

- build setup file for windows (using Inno Setup)



####################################################
###       Release: ngPost v1.0                   ###
###       date:    2019/08/24                    ###
####################################################

First release of the implementation
cf README:

command line usenet poster for binaries developped in C++/QT
it is designed to be as fast as possible and offer all the main features to post data easily and safely.

Here are the main features and advantages of ngPost:
    it can use several servers (using config file) with each several connections (supporting ssl)
    it is spreading those connection on several threads. By default the number of cores of the station but you can set the number if you fancy.
    it is using asynchronous sockets in the upload threads
    it is preparing the Articles on the main Thread (yEnc encoding) so the upload threads are always ready to write when they can. (each connections has 2 Articles ready in advance)
    it is limiting the disk access to the minimum by opening the files to post only once in the main Thread and processing them sequentially one by one (no need to open several files at the same time)
    it can do full obfuscation of the Article Header (subject and msg-id)
    it is generating a random uploader for each Article Header (from) but can use a fixed one if desired
    it is of course generating the nzb file
    it can support multiple files and multiple folders
    there is an handler on interruption which means that if you stop it, you'll close properly and generate the nzb for what has been posted
    in case of interruption, it will list the files that havn't been uploaded so you can repost only those ones and then manually concatenate the nzb files
    you can add meta in the header of the nzb (typically for a password)
    ...

What it does not:
    compress or generate the par2 for a single files (use a script to do it ;))
    retry posting articles (not really needed as the msg-id of the articles are generated using UUID (followed by @ that you can configure (by default @ngPost))
    retry to connect when a connection is lost as they are all created with the KeepAliveOption set. If we loose all the connections, ngPost close properly and write the nzb file

RQ: you don't need to obfuscate the file names as they will only be used in the nzb file as the obfuscation is done for each Article with a UUID as subject and msg-id.
